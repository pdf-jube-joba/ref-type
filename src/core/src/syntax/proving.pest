PROVE_START = _{ "-" }

exact_by_term = { "EXACT" ~ expression }
subset_elim_prop = { "SUBSET" ~ expression ~ "in" ~ expression ~ "<=" ~ expression }
leibniz_eq = { "LEIBNIZ" ~ expression ~ "=" ~ expression ~ "in" ~ expression ~ "=>" ~ expression }
equal_into_super = { "SUPERSET" ~ expression ~ "=" ~ expression ~ "in" ~ expression ~ "<=" ~ expression }
equal_into_sub = { "SUBSET" ~ expression ~ "=" ~ expression ~ "in" ~ expression ~ "=>" ~ expression }
exist_refine = { "EXISTS" ~ expression ~ ("in" ~ expression)? }

applied_rule = {
    reduce
}

reduce = {
    "Reduce" ~ expression?
}

ADMIT = { "ADMIT" }
ADMIT_ALL = {"ADMIT_ALL" }

PROOF_base = {
    exact_by_term
    | subset_elim_prop
    | leibniz_eq
    | equal_into_super
    | equal_into_sub
    | exist_refine    
}

PROOF = {
    PROVE_START ~ (
        ADMIT | ADMIT_ALL
        | PROOF_base
        | applied_rule
    )
}
