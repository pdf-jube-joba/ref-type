Inductive Nat: SET with
    | Zero: Nat
    | Succ: [Nat] -> Nat
;

Definition f: UNIV(0) := Nat -> SET;

Inductive Even: (_: Nat) -> PROP with
    | EvenZero: Even Nat::Zero
    | EvenSS: (n: Nat) -> [Even n] -> Even (Nat::Succ (Nat::Succ Nat::Zero))
;

Definition id_nat: Nat -> Nat := (x: Nat) |-> x;
Check ((x: {x: Nat | Even x}) |-> x): ({x: Nat | Even x} -> Nat);
